[include]
    path = ~/workspace/.gitconfig # include workspace specific gitconfig file if exist
[core]
    editor = vim
    whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
    excludesfile = ~/.gitignore
[diff]
    tool = vimdiff
[difftool]
    prompt = false
[alias]
    # list all git alias
    # do not use "_" when naming alias
    la = "!git config -l | grep alias | cut -c 7-"

    a = add

    br = branch
    local-br  = "!git fetch -p && git branch -vv | cut -c 3- | grep -v origin | awk '{ print $1 }'"
    remote-br = "!git fetch -p && git branch -vv | cut -c 3- | grep origin | awk '{ print $1 }'"
    # branch that has been removed from remote
    gone-br   = "!git fetch -p && git branch -vv | cut -c 3- | awk '/: gone]/{print $1}'"
    # delete both local and remote
    dbr = "!f() { \
        git push -d origin "$@"; \
        git branch -D "$@"; \
    }; f"
    d-local-br = branch -D
    d-untracked-local-br = "!git branch -D $(git local-branches)"
    d-gone-local-br = "!git branch -D $(git gone-branches)"

    cl = clone --recursive --depth=1

    # dry-run, only show what would be removed
    clean-dry = clean -n
    # remove all untracked files and dir
    clean-untracked = clean -f -d

    cm = commit -m

    co = checkout
    cob = checkout -b

    f = fetch origin -p

    pl = pull --rebase --prune

    ps = push --set-upstream origin
    psf = push -f --set-upstream origin

    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue

    rs = reset
    rs1 = reset HEAD~1
    rs2 = reset HEAD~2
    rs3 = reset HEAD~3

    st = status

    s = stash list
    sa = stash apply
    ss = stash save

    # submodule
    sm = submodule
    ism = submodule init
    asm = submodule add -f
    usm = submodule update --init --recursive
    dsm = "!f() { \
        git submodule deinit -f "$@"; \
        git rm -f "$@"; \
        rm -rf ".git/modules/$@"; \
    }; f"
